{"version":3,"sources":["Header.js","useFetch.js","CountriesList.js","lens-black.png","Home.js","BorderCountries.js","MoreDetails.js","CountryDetail.js","Error.js","App.js","index.js"],"names":["Header","handleTheme","e","root","document","documentElement","body","querySelector","classList","add","presentTheme","window","getComputedStyle","target","getPropertyValue","setTimeout","style","setProperty","remove","className","onClick","useFetch","url","useState","data","setData","loading","setLoading","error","setError","useEffect","abortCont","AbortController","fetch","singal","signal","then","res","json","Array","isArray","catch","err","message","console","log","abort","CountriesList","props","map","country","id","cca3","to","src","flag","alt","name","population","toLocaleString","region","capital","Home","setUrl","search","setSearch","filter","setFilter","lens","type","value","onChange","onKeyUp","key","placeholder","required","BorderCountries","detail","undefined","borders","join","border","MoreDetails","details","nativeName","topLevelDomain","currency","languages","CountryDetail","useParams","Error","App","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e0ad7520.chunk.js","sourcesContent":["const Header = () => {\r\n\tconst handleTheme = (e) => {\r\n\t\tlet root = document.documentElement;\r\n\t\tlet body = document.querySelector(\"body\");\r\n\t\t// let searchIcon = document.querySelector(\".input-div img\");\r\n\r\n\t\tbody.classList.add(\"pre-animation\");\r\n\r\n\t\t// to get the present background of the app\r\n\t\tconst presentTheme = window\r\n\t\t\t.getComputedStyle(e.target)\r\n\t\t\t.getPropertyValue(\"background-color\");\r\n\t\tsetTimeout(() => {\r\n\t\t\t//if the present theme isn't the dark theme\r\n\t\t\tif (presentTheme !== \"rgb(43, 57, 69)\") {\r\n\t\t\t\troot.style.setProperty(\"--Mode-Elements\", \"hsl(209, 23%, 22%)\");\r\n\t\t\t\troot.style.setProperty(\"--Mode-Text\", \"hsl(0, 0%, 100%)\");\r\n\t\t\t\troot.style.setProperty(\"--Mode-Background\", \"hsl(207, 26%, 17%)\");\r\n\t\t\t\t// searchIcon.setAttribute(\"src\", \"./lens-white.png\");\r\n\t\t\t} else {\r\n\t\t\t\t//if the present theme is the white theme\r\n\t\t\t\troot.style.setProperty(\"--Mode-Elements\", \"hsl(0, 0%, 100%)\");\r\n\t\t\t\troot.style.setProperty(\"--Mode-Text\", \"hsl(200, 15%, 8%)\");\r\n\t\t\t\troot.style.setProperty(\"--Mode-Background\", \"hsl(0, 0%, 98%)\");\r\n\t\t\t\t// searchIcon.setAttribute(\"src\", \"./lens-black.png\");\r\n\t\t\t}\r\n\r\n\t\t\tbody.classList.remove(\"pre-animation\");\r\n\t\t\tbody.classList.add(\"post-animation\");\r\n\t\t}, 1200);\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"header\">\r\n\t\t\t<h1>Where in the world?</h1>\r\n\t\t\t<p className=\"theme-toggle\">\r\n\t\t\t\t<i className=\"far fa-moon\" onClick={handleTheme}></i>{\" \"}\r\n\t\t\t\t<span onClick={handleTheme}> Dark Mode</span>\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n\tconst [data, setData] = useState(null);\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [error, setError] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst abortCont = new AbortController();\r\n\r\n\t\tfetch(url, { singal: abortCont.signal })\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then((data) => {\r\n\t\t\t\tsetData(data);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tsetError(false);\r\n\r\n\t\t\t\tif (Array.isArray(data) === false) {\r\n\t\t\t\t\tsetError(true);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tif (err.message === \"AbortError\") {\r\n\t\t\t\t\tconsole.log(\"fetch aborted\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log(err.message);\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\tsetError(true);\r\n\t\t\t\t\t// setData(null);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\treturn () => {\r\n\t\t\tabortCont.abort();\r\n\t\t};\r\n\t}, [url]);\r\n\r\n\treturn { data, loading, error };\r\n};\r\n\r\nexport default useFetch;\r\n","import { Link } from \"react-router-dom\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst CountriesList = (props) => {\r\n\t//this assess the modified url passed as a prop based on the default, search or filter\r\n\tlet url = props.url;\r\n\t// console.log(url);\r\n\tconst { data, loading, error } = useFetch(url);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"countries-list\">\r\n\t\t\t\t{loading && <h2>Loading...</h2>}\r\n\t\t\t\t{data &&\r\n\t\t\t\t\tArray.isArray(data) &&\r\n\t\t\t\t\tdata.map((country) => (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName=\"country-detail\"\r\n\t\t\t\t\t\t\tkey={country.cca3}\r\n\t\t\t\t\t\t\tid={country.cca3}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Link to={\"/mern-countries-app/\" + country.cca3}>\r\n\t\t\t\t\t\t\t\t<img className=\"flag\" src={country.flag} alt={country.name} />\r\n\t\t\t\t\t\t\t\t<div className=\"detail\">\r\n\t\t\t\t\t\t\t\t\t<h2 className=\"country-name\">{country.name}</h2>\r\n\t\t\t\t\t\t\t\t\t<p className=\"population\">\r\n\t\t\t\t\t\t\t\t\t\tPopulaton:{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"tag\">\r\n\t\t\t\t\t\t\t\t\t\t\t{country.population.toLocaleString(\"en\")}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t<p className=\"region\">\r\n\t\t\t\t\t\t\t\t\t\tRegion: <span className=\"tag\">{country.region}</span>\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t<p className=\"capital\">\r\n\t\t\t\t\t\t\t\t\t\tCapital: <span className=\"tag\">{country.capital}</span>\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t{error && (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h2>Could not get country details</h2>\r\n\t\t\t\t\t\t<p>Please refresh the page</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CountriesList;\r\n","export default __webpack_public_path__ + \"static/media/lens-black.6fadad65.png\";","import { useEffect, useState } from \"react\";\r\nimport CountriesList from \"./CountriesList\";\r\nimport lens from \"./lens-black.png\";\r\n\r\nconst Home = () => {\r\n\tconst [url, setUrl] = useState(\r\n\t\t\"https://reed-countries-api.herokuapp.com/all\",\r\n\t);\r\n\tconst [search, setSearch] = useState(\"\");\r\n\tconst [filter, setFilter] = useState(\"all\");\r\n\r\n\t// this is to change the url only when the filter value gets updated\r\n\tuseEffect(() => {\r\n\t\tif (filter) {\r\n\t\t\tif (filter === \"all\") {\r\n\t\t\t\t//reseting the url to get data for all countries\r\n\t\t\t\tsetUrl(\"https://reed-countries-api.herokuapp.com/all\");\r\n\t\t\t} else {\r\n\t\t\t\t//setting the url to get the data for the selected region based on the filter value\r\n\t\t\t\tsetUrl(\"https://reed-countries-api.herokuapp.com/\" + filter);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [filter]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"search-filter\">\r\n\t\t\t\t<div className=\"input-div\">\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={lens}\r\n\t\t\t\t\t\talt=\"lens\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t// making the search icon respond to click events and search\r\n\t\t\t\t\t\t\tif (search !== \"\") {\r\n\t\t\t\t\t\t\t\tsetUrl(\r\n\t\t\t\t\t\t\t\t\t\"https://reed-countries-api.herokuapp.com/\" +\r\n\t\t\t\t\t\t\t\t\t\tfilter +\r\n\t\t\t\t\t\t\t\t\t\t\"/\" +\r\n\t\t\t\t\t\t\t\t\t\tsearch,\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"search\"\r\n\t\t\t\t\t\tname=\"search\"\r\n\t\t\t\t\t\tid=\"search\"\r\n\t\t\t\t\t\tvalue={search}\r\n\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\tsetSearch(e.target.value);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonKeyUp={(e) => {\r\n\t\t\t\t\t\t\tif (e.key === \"Enter\" && search !== \"\") {\r\n\t\t\t\t\t\t\t\t// this changes the url to fetch from when a search value is entered\r\n\t\t\t\t\t\t\t\tsetUrl(\r\n\t\t\t\t\t\t\t\t\t\"https://reed-countries-api.herokuapp.com/\" +\r\n\t\t\t\t\t\t\t\t\t\tfilter +\r\n\t\t\t\t\t\t\t\t\t\t\"/\" +\r\n\t\t\t\t\t\t\t\t\t\tsearch,\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tplaceholder=\"Search for a country by name...\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<select\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tid=\"filter\"\r\n\t\t\t\t\t// making the filter get all countries or the specified region alone\r\n\t\t\t\t\tvalue={filter || \"all\"}\r\n\t\t\t\t\tname=\"filter\"\r\n\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\tsetFilter(e.target.value);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<option value=\"all\">Filter by Region</option>\r\n\t\t\t\t\t<option value=\"Africa\">Africa</option>\r\n\t\t\t\t\t<option value=\"Americas\">America</option>\r\n\t\t\t\t\t<option value=\"Asia\">Asia</option>\r\n\t\t\t\t\t<option value=\"Europe\">Europe</option>\r\n\t\t\t\t\t<option value=\"Oceania\">Oceania</option>\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* passing the modified url as a prop to the component that renders the\r\n\t\t\tlist of the countries */}\r\n\t\t\t<CountriesList url={url} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","import useFetch from \"./useFetch\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst BorderCountries = (props) => {\r\n\tconst detail = props.data;\r\n\tvar url;\r\n\r\n\t//checking if the country passed as props has valid data for bordering countries, and\r\n\t// making the url fetch the data for all the borders using the cca3 codes\r\n\tif (detail.borders !== undefined) {\r\n\t\tvar borders = detail.borders;\r\n\t\turl =\r\n\t\t\t\"https://reed-countries-api.herokuapp.com/codelist/list=\" +\r\n\t\t\tborders.join(\",\");\r\n\t} else {\r\n\t\turl = \"none\";\r\n\t}\r\n\r\n\tconst { data, loading, error } = useFetch(url);\r\n\r\n\treturn (\r\n\t\t<div className=\"three\">\r\n\t\t\t<h4>Border Countries: </h4>\r\n\t\t\t{loading && <p>Loading...</p>}\r\n\t\t\t{error && <p>Borders not found</p>}\r\n\t\t\t{data &&\r\n\t\t\t\tArray.isArray(data) &&\r\n\t\t\t\tdata.map((border) => (\r\n\t\t\t\t\t//making the displayed country name link to the details for the country\r\n\t\t\t\t\t<Link to={\"/mern-countries-app/\" + border.cca3} key={border.cca3}>\r\n\t\t\t\t\t\t<p>{border.name}</p>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default BorderCountries;\r\n","import BorderCountries from \"./BorderCountries\";\r\n\r\nconst MoreDetails = (props) => {\r\n\t// details is the data for the specific country clicked passed down as a prop\r\n\tconst details = props.data;\r\n\r\n\treturn (\r\n\t\t<div className=\"more-detail\">\r\n\t\t\t<img src={details.flag} alt={(details.name, \"flag\")} />\r\n\r\n\t\t\t<div className=\"one\">\r\n\t\t\t\t<h2 className=\"country-name\">{details.name}</h2>\r\n\t\t\t\t<p className=\"native-name\">\r\n\t\t\t\t\tNative Name: <span className=\"tag\">{details.nativeName}</span>\r\n\t\t\t\t</p>\r\n\r\n\t\t\t\t<p className=\"population\">\r\n\t\t\t\t\tPopulation:{\" \"}\r\n\t\t\t\t\t<span className=\"tag\">{details.population.toLocaleString(\"en\")}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p className=\"region\">\r\n\t\t\t\t\tRegion: <span className=\"tag\">{details.region}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p className=\"capital\">\r\n\t\t\t\t\tCapital: <span className=\"tag\">{details.capital}</span>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"two\">\r\n\t\t\t\t<p className=\"domain\">\r\n\t\t\t\t\tTop Level Domain:{\" \"}\r\n\t\t\t\t\t<span className=\"tag\">{details.topLevelDomain}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p className=\"currencies\">\r\n\t\t\t\t\tCurrencies: <span className=\"tag\">{details.currency}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p className=\"language\">\r\n\t\t\t\t\tLanguages: <span className=\"tag\">{details.languages.join(\", \")}</span>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t{<BorderCountries data={details} />}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MoreDetails;\r\n","import { Link, useParams } from \"react-router-dom\";\r\nimport MoreDetails from \"./MoreDetails\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst CountryDetail = () => {\r\n\tconst { country } = useParams(); //gets the cca3 code from the url clicked to know which specific country is clicked\r\n\tlet url = \"https://reed-countries-api.herokuapp.com/code/\" + country; //sets the url for that country\r\n\r\n\tconst { data, loading, error } = useFetch(url);\r\n\r\n\treturn (\r\n\t\t<div className=\"specific\">\r\n\t\t\t<Link to=\"/mern-countries-app\">\r\n\t\t\t\t<p className=\"home\">&#8592; Back</p>\r\n\t\t\t</Link>\r\n\r\n\t\t\t{loading && <h2>Loading..</h2>}\r\n\r\n\t\t\t{error && (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2>Could not get country details</h2>\r\n\t\t\t\t\t<Link to=\"/mern-countries-app\">Back to homepage</Link>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t{/* if the data retrieved is an array as expected, we render the details using the first data in the array */}\r\n\t\t\t{data && Array.isArray(data) && <MoreDetails data={data[0]} />}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CountryDetail;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst Error = () => {\r\n\treturn (\r\n\t\t<div className=\"error\">\r\n\t\t\t<h2>Page not found</h2>\r\n\r\n\t\t\t<Link to=\"/mern-countries-app\">\r\n\t\t\t\t<p>Back to home page</p>\r\n\t\t\t</Link>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Error;\r\n","import Header from \"./Header\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport Home from \"./Home\";\r\nimport CountryDetail from \"./CountryDetail\";\r\nimport Error from \"./Error\";\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<Header />\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route exact path=\"/mern-countries-app\">\r\n\t\t\t\t\t\t<Home />\r\n\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t<Route path=\"/mern-countries-app/:country\">\r\n\t\t\t\t\t\t<CountryDetail />\r\n\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t<Route path=\"/*\">\r\n\t\t\t\t\t\t<Error />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t</Switch>\r\n\t\t\t</div>\r\n\t\t</Router>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\"),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}